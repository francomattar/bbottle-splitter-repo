@using System.Diagnostics.CodeAnalysis
@using BottleSplitter.Infrastructure

@inject NavigationManager NavigationManager

<MudMenu Icon="@Icons.Material.Filled.Menu" Dense="true"  EndIcon="@Icons.Material.Filled.KeyboardArrowDown">
    <MudMenuItem  Href="/">Home</MudMenuItem>
    @if (_authenticated)
    {
        <MudMenuItem Href="/my-splits" Icon="@Icons.Material.Filled.FormatListBulleted">My Splits</MudMenuItem>
        <MudMenuItem Href="/add-split" Icon="@Icons.Custom.Brands.Awesome">Add a Split</MudMenuItem>

        <MudMenuItem Href="/account" Icon="@Icons.Material.Filled.Accessibility">Account</MudMenuItem>
        <MudMenuItem Href="/logout" Icon="@Icons.Material.Filled.Logout">Logout</MudMenuItem>
    }
    else
    {
        <MudMenuItem OnClick="GitHubLogin">Login via Github</MudMenuItem>
    }
</MudMenu>

@code {
    private MudTheme _theme = new();
    private bool _authenticated;
    [Inject]
    [SuppressMessage("ReSharper", "NullableWarningSuppressionIsUsed")]
    public CustomAuthenticationStateProvider CustomAuthenticationStateProvider { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _authenticated = (await CustomAuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity?.IsAuthenticated ?? false;
    }

    private void GitHubLogin()
    {
        NavigationManager.NavigateTo("/challenge/github", true);
    }

}
