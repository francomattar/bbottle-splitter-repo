@page "/splits"
@attribute [Authorize]
@inject IUserManager UserManager;
@inject ISplitManager SplitManager;
@using System.Diagnostics.CodeAnalysis
@using BottleSplitter.Infrastructure
@using BottleSplitter.Model
@using BottleSplitter.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Server
@using Narochno.Primitives

<PageTitle>My Splits</PageTitle>
<MudText Typo="Typo.h2" Class="pa-4">Active Splits</MudText>

@if (_model.Any())
{
    @foreach (var split in _model)
    {
        <SplitItem Split="split"/>
    }
}
else
{
    <MudText>No splits made yet!</MudText>
}

@code {
    List<BottleSplit> _model = new ();

    private SplitterUser? _splitterUser;
    [Inject]
    [SuppressMessage("ReSharper", "NullableWarningSuppressionIsUsed")]
    public ServerAuthenticationStateProvider ServerAuthenticationStateProvider { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var state = await ServerAuthenticationStateProvider.GetAuthenticationStateAsync();
        var email = state.User.GetEmail().NotNull();
        _splitterUser = await UserManager.GetUserByEmail(email);
        _model = await SplitManager.GetSplits(_splitterUser.NotNull().Id);
    }
}
